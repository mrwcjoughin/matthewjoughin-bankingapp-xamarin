//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace idat.aegis.xamarin {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IDATSoap", Namespace="http://idat.com/")]
    public partial class IDAT : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InitialSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeneficiariesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayBeneficiariesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBeneficiaryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IDAT() {
            this.Url = global::BankTest.Properties.Settings.Default.BankTest_wsIDAT_IDAT;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InitialSetupCompletedEventHandler InitialSetupCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetBeneficiariesCompletedEventHandler GetBeneficiariesCompleted;
        
        /// <remarks/>
        public event PayBeneficiariesCompletedEventHandler PayBeneficiariesCompleted;
        
        /// <remarks/>
        public event RemoveBeneficiaryCompletedEventHandler RemoveBeneficiaryCompleted;
        
        /// <remarks/>
        public event AddBeneficiaryCompletedEventHandler AddBeneficiaryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idat.com/InitialSetup", RequestNamespace="http://idat.com/", ResponseNamespace="http://idat.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InitialSetup() {
            this.Invoke("InitialSetup", new object[0]);
        }
        
        /// <remarks/>
        public void InitialSetupAsync() {
            this.InitialSetupAsync(null);
        }
        
        /// <remarks/>
        public void InitialSetupAsync(object userState) {
            if ((this.InitialSetupOperationCompleted == null)) {
                this.InitialSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitialSetupOperationCompleted);
            }
            this.InvokeAsync("InitialSetup", new object[0], this.InitialSetupOperationCompleted, userState);
        }
        
        private void OnInitialSetupOperationCompleted(object arg) {
            if ((this.InitialSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitialSetupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idat.com/Login", RequestNamespace="http://idat.com/", ResponseNamespace="http://idat.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string idatRequest, System.DateTime dt, string Matrix) {
            object[] results = this.Invoke("Login", new object[] {
                        idatRequest,
                        dt,
                        Matrix});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string idatRequest, System.DateTime dt, string Matrix) {
            this.LoginAsync(idatRequest, dt, Matrix, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string idatRequest, System.DateTime dt, string Matrix, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        idatRequest,
                        dt,
                        Matrix}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idat.com/GetBeneficiaries", RequestNamespace="http://idat.com/", ResponseNamespace="http://idat.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBeneficiaries(string UserID, System.DateTime dt, string Matrix) {
            object[] results = this.Invoke("GetBeneficiaries", new object[] {
                        UserID,
                        dt,
                        Matrix});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeneficiariesAsync(string UserID, System.DateTime dt, string Matrix) {
            this.GetBeneficiariesAsync(UserID, dt, Matrix, null);
        }
        
        /// <remarks/>
        public void GetBeneficiariesAsync(string UserID, System.DateTime dt, string Matrix, object userState) {
            if ((this.GetBeneficiariesOperationCompleted == null)) {
                this.GetBeneficiariesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeneficiariesOperationCompleted);
            }
            this.InvokeAsync("GetBeneficiaries", new object[] {
                        UserID,
                        dt,
                        Matrix}, this.GetBeneficiariesOperationCompleted, userState);
        }
        
        private void OnGetBeneficiariesOperationCompleted(object arg) {
            if ((this.GetBeneficiariesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeneficiariesCompleted(this, new GetBeneficiariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idat.com/PayBeneficiaries", RequestNamespace="http://idat.com/", ResponseNamespace="http://idat.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PayBeneficiaries(string BeneficiaryPayments, System.DateTime dt, string Matrix) {
            object[] results = this.Invoke("PayBeneficiaries", new object[] {
                        BeneficiaryPayments,
                        dt,
                        Matrix});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PayBeneficiariesAsync(string BeneficiaryPayments, System.DateTime dt, string Matrix) {
            this.PayBeneficiariesAsync(BeneficiaryPayments, dt, Matrix, null);
        }
        
        /// <remarks/>
        public void PayBeneficiariesAsync(string BeneficiaryPayments, System.DateTime dt, string Matrix, object userState) {
            if ((this.PayBeneficiariesOperationCompleted == null)) {
                this.PayBeneficiariesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayBeneficiariesOperationCompleted);
            }
            this.InvokeAsync("PayBeneficiaries", new object[] {
                        BeneficiaryPayments,
                        dt,
                        Matrix}, this.PayBeneficiariesOperationCompleted, userState);
        }
        
        private void OnPayBeneficiariesOperationCompleted(object arg) {
            if ((this.PayBeneficiariesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayBeneficiariesCompleted(this, new PayBeneficiariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idat.com/RemoveBeneficiary", RequestNamespace="http://idat.com/", ResponseNamespace="http://idat.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveBeneficiary(string BeneficiaryName, System.DateTime dt, string Matrix) {
            object[] results = this.Invoke("RemoveBeneficiary", new object[] {
                        BeneficiaryName,
                        dt,
                        Matrix});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveBeneficiaryAsync(string BeneficiaryName, System.DateTime dt, string Matrix) {
            this.RemoveBeneficiaryAsync(BeneficiaryName, dt, Matrix, null);
        }
        
        /// <remarks/>
        public void RemoveBeneficiaryAsync(string BeneficiaryName, System.DateTime dt, string Matrix, object userState) {
            if ((this.RemoveBeneficiaryOperationCompleted == null)) {
                this.RemoveBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("RemoveBeneficiary", new object[] {
                        BeneficiaryName,
                        dt,
                        Matrix}, this.RemoveBeneficiaryOperationCompleted, userState);
        }
        
        private void OnRemoveBeneficiaryOperationCompleted(object arg) {
            if ((this.RemoveBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveBeneficiaryCompleted(this, new RemoveBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idat.com/AddBeneficiary", RequestNamespace="http://idat.com/", ResponseNamespace="http://idat.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddBeneficiary(string BeneficiaryObject, System.DateTime dt, string Matrix) {
            object[] results = this.Invoke("AddBeneficiary", new object[] {
                        BeneficiaryObject,
                        dt,
                        Matrix});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBeneficiaryAsync(string BeneficiaryObject, System.DateTime dt, string Matrix) {
            this.AddBeneficiaryAsync(BeneficiaryObject, dt, Matrix, null);
        }
        
        /// <remarks/>
        public void AddBeneficiaryAsync(string BeneficiaryObject, System.DateTime dt, string Matrix, object userState) {
            if ((this.AddBeneficiaryOperationCompleted == null)) {
                this.AddBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("AddBeneficiary", new object[] {
                        BeneficiaryObject,
                        dt,
                        Matrix}, this.AddBeneficiaryOperationCompleted, userState);
        }
        
        private void OnAddBeneficiaryOperationCompleted(object arg) {
            if ((this.AddBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBeneficiaryCompleted(this, new AddBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InitialSetupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBeneficiariesCompletedEventHandler(object sender, GetBeneficiariesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeneficiariesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeneficiariesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PayBeneficiariesCompletedEventHandler(object sender, PayBeneficiariesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayBeneficiariesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayBeneficiariesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoveBeneficiaryCompletedEventHandler(object sender, RemoveBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddBeneficiaryCompletedEventHandler(object sender, AddBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591